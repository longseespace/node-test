{"version":3,"file":"profile.service.js","sourceRoot":"","sources":["../../../../home/travis/build/longseespace/node-test/tmp/broccoli_type_script_compiler-input_base_path-ueMrKXKK.tmp/0/src/app/components/profile/shared/profile.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAC3C,qBAA8C,eAAe,CAAC,CAAA;AAG9D;IAIE,wBAAqB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAFvB,eAAU,GAAG,wDAAwD,CAAC;IAE5C,CAAC;IAEnC,4BAAG,GAAH,UAAI,KAAK;QAAT,iBAwBC;QAvBC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAA,OAAO;YACxB;;;;eAIG;YACF,IAAI,OAAO,GAAG,IAAI,cAAO,CAAC;gBACxB,cAAc,EAAE,kBAAkB;gBAClC,eAAe,EAAE,MAAM,GAAG,KAAK;aAChC,CAAC,CAAC;YACH,IAAI,OAAO,GAAG,IAAI,qBAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;YACvD,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAI,CAAC,UAAU,EAAE,OAAO,CAAC;iBACpC,SAAS,EAAE;iBACX,IAAI,CAAC,UAAA,GAAG;gBACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;gBACxB,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;YACtB,CAAC,CAAC;iBACD,KAAK,CAAC,UAAA,KAAK;gBACV,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACrB,OAAO,CAAC,KAAK,CAAC,CAAC;YACjB,CAAC,CAAC,CAAC;YACN,qDAAqD;QACvD,CAAC,CAAC,CAAA;IACJ,CAAC;IAED;;OAEG;IACH,+BAAM,GAAN,UAAO,KAAK,EAAE,OAAO;QAArB,iBAyBC;QAxBC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAA,OAAO;YACxB;;;;eAIG;YACF,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;YACnC,IAAI,OAAO,GAAG,IAAI,cAAO,CAAC;gBACxB,cAAc,EAAE,kBAAkB;gBAClC,eAAe,EAAE,MAAM,GAAG,KAAK;aAChC,CAAC,CAAC;YACH,IAAI,OAAO,GAAG,IAAI,qBAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;YACvD,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,UAAU,EAAE,IAAI,EAAE,OAAO,CAAC;iBAC3C,SAAS,EAAE;iBACX,IAAI,CAAC,UAAA,GAAG;gBACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;gBACxB,OAAO,CAAC,IAAI,CAAC,CAAC;YAChB,CAAC,CAAC;iBACD,KAAK,CAAC,UAAA,KAAK;gBACV,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACrB,OAAO,CAAC,KAAK,CAAC,CAAC;YACjB,CAAC,CAAC,CAAC;YACN,qDAAqD;QACvD,CAAC,CAAC,CAAA;IACJ,CAAC;IAED;;OAEG;IACH,6BAAI,GAAJ,UAAK,KAAK,EAAE,OAAO;QACjB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IACrC,CAAC;IApEH;QAAC,iBAAU,EAAE;;sBAAA;IAqEb,qBAAC;AAAD,CAAC,AApED,IAoEC;AApEY,sBAAc,iBAoE1B,CAAA","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions } from '@angular/http';\n\n@Injectable()\nexport class ProfileService {\n\n  private profileUrl = 'https://polar-sierra-94874.herokuapp.com/users/profile';\n\n  constructor (private http: Http) {}\n\n  get(token) {\n    return new Promise(resolve => {\n      /**\n       * This is where you should talk with your API\n       * See the Angular 2 Http Client Documentation for more information\n       * Documentation: https://angular.io/docs/ts/latest/guide/server-communication.html\n       */\n       let headers = new Headers({\n         'Content-Type': 'application/json',\n         'Authorization': 'JWT ' + token\n       });\n       let options = new RequestOptions({ headers: headers });\n       this.http.get(this.profileUrl, options)\n         .toPromise()\n         .then(res => {\n           console.log(res.json());\n           resolve(res.json());\n         })\n         .catch(error => {\n           console.error(error);\n           resolve(false);\n         });\n      // resolve(true); // Must be false in case of failure\n    })\n  }\n\n  /**\n   * Create an user Profile\n   */\n  create(token, profile) {\n    return new Promise(resolve => {\n      /**\n       * This is where you should talk with your API\n       * See the Angular 2 Http Client Documentation for more information\n       * Documentation: https://angular.io/docs/ts/latest/guide/server-communication.html\n       */\n       let body = JSON.stringify(profile);\n       let headers = new Headers({\n         'Content-Type': 'application/json',\n         'Authorization': 'JWT ' + token\n       });\n       let options = new RequestOptions({ headers: headers });\n       this.http.post(this.profileUrl, body, options)\n         .toPromise()\n         .then(res => {\n           console.log(res.json());\n           resolve(true);\n         })\n         .catch(error => {\n           console.error(error);\n           resolve(false);\n         });\n      // resolve(true); // Must be false in case of failure\n    })\n  }\n\n  /**\n   * Edit an user Profile\n   */\n  edit(token, profile) {\n    return this.create(token, profile);\n  }\n}\n"]}