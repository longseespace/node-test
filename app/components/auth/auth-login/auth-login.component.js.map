{"version":3,"file":"auth-login.component.js","sourceRoot":"","sources":["../../../../home/travis/build/longseespace/node-test/tmp/broccoli_type_script_compiler-input_base_path-ueMrKXKK.tmp/0/src/app/components/auth/auth-login/auth-login.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA0B,eAAe,CAAC,CAAA;AAC1C,uBAA0D,iBAAiB,CAAC,CAAA;AAE5E,uBAA4B,iBAAiB,CAAC,CAAA;AAC9C,iBAA4B,KAAK,CAAC,CAAA;AAYlC;IAKE,4BACU,MAAe,EACf,WAAyB;QADzB,WAAM,GAAN,MAAM,CAAS;QACf,gBAAW,GAAX,WAAW,CAAc;IACjC,CAAC;IAEH,qCAAQ,GAAR;QAAA,iBASC;QARC,IAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;QAC5D,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,EAAE,IAAI,CAAC;iBAC9C,IAAI,CAAC,UAAA,OAAO;gBACX,EAAE,CAAC,CAAC,OAAO,CAAC;oBACV,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAE,MAAM,CAAE,EAAE,EAAE,WAAW,EAAE,EAAE,EAAC,CAAC,CAAC;YACzD,CAAC,CAAC,CAAA;QACJ,CAAC;IACH,CAAC;IAED;;;OAGG;IACH,yCAAY,GAAZ,UAAa,QAAQ;QAArB,iBASC;QARC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC;aAC1D,IAAI,CAAC,UAAA,OAAO;YACX,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACZ,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAE,MAAM,CAAE,CAAC,CAAC;YACnC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,KAAK,GAAG,2BAA2B,CAAC;YAC3C,CAAC;QACH,CAAC,CAAC,CAAA;IACJ,CAAC;IA5CH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAG,MAAM,CAAC,EAAE;YACpB,QAAQ,EAAG,gBAAgB;YAC3B,WAAW,EAAE,6BAA6B;YAC1C,UAAU,EAAG;gBACX,0BAAiB;gBACjB,oBAAW;aACZ;SACF,CAAC;;0BAAA;IAqCF,yBAAC;AAAD,CAAC,AAnCD,IAmCC;AAnCY,0BAAkB,qBAmC9B,CAAA","sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute, Router, ROUTER_DIRECTIVES } from '@angular/router';\n\nimport { CzInputText } from '../../../shared';\nimport { AuthService } from '../';\n\n@Component({\n  moduleId : module.id,\n  selector : '.l-auth--login',\n  templateUrl: './auth-login.component.html',\n  directives : [\n    ROUTER_DIRECTIVES,\n    CzInputText\n  ]\n})\n\nexport class AuthLoginComponent{\n  public email : string;\n  public password : string;\n  private error: string;\n\n  constructor(\n    private router : Router,\n    private authService : AuthService)\n  { }\n\n  ngOnInit() {\n    const token = window.location.search.replace('?token=', '');\n    if (token.length > 0) {\n      this.authService.login('linkedin', token, null)\n      .then(succeed => {\n        if (succeed)\n          this.router.navigate([ 'home' ], { queryParams: {}});\n      })\n    }\n  }\n\n  /**\n   * Handles the user authentication then redirects to home if succeed\n   * @param {string} provider - Optional provider parameter\n   */\n  authenticate(provider) {\n    this.authService.login(provider, this.email, this.password)\n    .then(succeed => {\n      if (succeed) {\n        this.router.navigate([ 'home' ]);\n      } else {\n        this.error = 'Invalid Username/Password';\n      }\n    })\n  }\n}\n"]}