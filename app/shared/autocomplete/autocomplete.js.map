{"version":3,"file":"autocomplete.js","sourceRoot":"","sources":["../../../home/travis/build/longseespace/node-test/tmp/broccoli_type_script_compiler-input_base_path-ueMrKXKK.tmp/0/src/app/shared/autocomplete/autocomplete.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, AfterViewInit, ViewChild, Input } from '@angular/core';\nimport { Observable } from 'rxjs/Rx';\nimport { TYPEAHEAD_DIRECTIVES } from 'ng2-bootstrap/ng2-bootstrap';\n\nimport { CzInputText } from '../';\n\n@Component({\n  moduleId : module.id,\n  selector : 'cz-autocomplete',\n  templateUrl: './autocomplete.html',\n  directives : [\n    TYPEAHEAD_DIRECTIVES,\n    CzInputText\n  ]\n})\n\nexport class CzAutocomplete {\n  /**\n   * View elements\n   */\n  @ViewChild('input') input;\n  @ViewChild('elements') elements;\n\n  /**\n   * Bindings\n   */\n  @Input() name : string;\n  @Input() placeholder : string;\n  @Input() model : string;\n  @Input() items : Array<string>;\n\n  public selected:string = '';\n  public dataSource:Observable<any>;\n  public asyncSelected:string = '';\n  public typeaheadLoading:boolean = false;\n  public typeaheadNoResults:boolean = false;\n  public states:Array<string> = ['Alabama', 'Alaska', 'Arizona', 'Arkansas',\n    'California', 'Colorado',\n    'Connecticut', 'Delaware', 'Florida', 'Georgia', 'Hawaii', 'Idaho',\n    'Illinois', 'Indiana', 'Iowa',\n    'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts',\n    'Michigan', 'Minnesota',\n    'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire',\n    'New Jersey', 'New Mexico',\n    'New York', 'North Dakota', 'North Carolina', 'Ohio', 'Oklahoma', 'Oregon',\n    'Pennsylvania', 'Rhode Island',\n    'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont',\n    'Virginia', 'Washington',\n    'West Virginia', 'Wisconsin', 'Wyoming'];\n  public statesComplex:Array<any> = [\n    {id: 1, name: 'Alabama'}, {id: 2, name: 'Alaska'}, {id: 3, name: 'Arizona'},\n    {id: 4, name: 'Arkansas'}, {id: 5, name: 'California'},\n    {id: 6, name: 'Colorado'}, {id: 7, name: 'Connecticut'},\n    {id: 8, name: 'Delaware'}, {id: 9, name: 'Florida'},\n    {id: 10, name: 'Georgia'}, {id: 11, name: 'Hawaii'},\n    {id: 12, name: 'Idaho'}, {id: 13, name: 'Illinois'},\n    {id: 14, name: 'Indiana'}, {id: 15, name: 'Iowa'},\n    {id: 16, name: 'Kansas'}, {id: 17, name: 'Kentucky'},\n    {id: 18, name: 'Louisiana'}, {id: 19, name: 'Maine'},\n    {id: 21, name: 'Maryland'}, {id: 22, name: 'Massachusetts'},\n    {id: 23, name: 'Michigan'}, {id: 24, name: 'Minnesota'},\n    {id: 25, name: 'Mississippi'}, {id: 26, name: 'Missouri'},\n    {id: 27, name: 'Montana'}, {id: 28, name: 'Nebraska'},\n    {id: 29, name: 'Nevada'}, {id: 30, name: 'New Hampshire'},\n    {id: 31, name: 'New Jersey'}, {id: 32, name: 'New Mexico'},\n    {id: 33, name: 'New York'}, {id: 34, name: 'North Dakota'},\n    {id: 35, name: 'North Carolina'}, {id: 36, name: 'Ohio'},\n    {id: 37, name: 'Oklahoma'}, {id: 38, name: 'Oregon'},\n    {id: 39, name: 'Pennsylvania'}, {id: 40, name: 'Rhode Island'},\n    {id: 41, name: 'South Carolina'}, {id: 42, name: 'South Dakota'},\n    {id: 43, name: 'Tennessee'}, {id: 44, name: 'Texas'},\n    {id: 45, name: 'Utah'}, {id: 46, name: 'Vermont'},\n    {id: 47, name: 'Virginia'}, {id: 48, name: 'Washington'},\n    {id: 49, name: 'West Virginia'}, {id: 50, name: 'Wisconsin'},\n    {id: 51, name: 'Wyoming'}];\n\n  constructor() {\n    this.dataSource = Observable.create((observer:any) => {\n      let query = new RegExp(this.asyncSelected, 'ig');\n\n      observer.next(this.statesComplex.filter((state:any) => {\n        return query.test(state.name);\n      }));\n    });\n  }\n\n  public changeTypeaheadLoading(e:boolean):void {\n    this.typeaheadLoading = e;\n  }\n\n  public changeTypeaheadNoResults(e:boolean):void {\n    this.typeaheadNoResults = e;\n  }\n\n  public typeaheadOnSelect(e:any):void {\n    console.log('Selected value: ',e.item);\n  }\n}\n"]}